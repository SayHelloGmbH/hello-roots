@function breakpointPixels($key) {
	@if unit(map-get($breakpoints, $key)) != '' {
		@return map-get($breakpoints, $key)+0px;
	} @else {
		@return map-get($breakpoints, $key);
	}
}

@mixin for-screen-min($name, $sizes: $breakpoints) {
	$min: device-breakpoints-min($name, $sizes);

	@if type-of($min) == 'number' and unit($min) != '%' {
		@media screen and (max-width: $min+0px) {
			@content;
		}
	} @else {
		@content;
	}
}

@mixin for-screen-max($name, $sizes: $breakpoints) {
	$max: device-breakpoints-max($name, $sizes);

	@if type-of($max) == 'number' and unit($max) != '%' {
		@media screen and (max-width: $max+0px) {
			@content;
		}
	} @else {
		@content;
	}
}

@mixin for-screen($name, $sizes: $breakpoints) {
	@include for-screen-min($name, $sizes) {
		@include for-screen-max($name, $sizes) {
			@content;
		}
	}
}

@mixin mobile() {
	@include for-screen-max(tablet) {
		@content;
	}
}

@mixin narrow() {
	@include for-screen-min(narrow) {
		@content;
	}
}

@mixin tablet() {
	@include for-screen-min(tablet) {
		@content;
	}
}

@mixin laptop() {
	@include for-screen-min(laptop) {
		@content;
	}
}

@mixin desktop() {
	@include for-screen-min(desktop) {
		@content;
	}
}

@mixin wordpress_small() {
	@include for-screen-min(wordpress_small) {
		@content;
	}
}

@mixin wordpress_medium() {
	@include for-screen-min(wordpress_medium) {
		@content;
	}
}

@mixin wide() {
	@include for-screen-min(wide) {
		@content;
	}
}

@mixin full() {
	@include for-screen-min(full) {
		@content;
	}
}
